{"version":3,"sources":["components/LoginForm.js","components/RecipeDescription.js","components/PostRecipe.js","components/Map.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","id","value","register","registerForm","backToLogin","handleLogin","isLoading","preventDefault","_this$state","state","email","password","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","success","saveToken","token","localStorage","setItem","toHome","signUpError","message","alert","handleSubmit","_this$state2","username","validSession","length","_this2","react_default","a","createElement","react_router","to","Container","className","onSubmit","FormGroup","controlId","bsSize","FormLabel","FormControl","autoFocus","type","onChange","Button","block","disabled","validateForm","variant","onClick","Component","RecipeDescription","ratingButtons","goBack","title","user","style","max-height","src","imgSrc","elements","longDesc","instructions","React","PostRecipe","shortDesc","ingredients","imageURL","ingredientsArray","replace","split","map","item","toUpperCase","slice","description","longDescription","image","mapStyles","width","height","MapContainer","_Component","onMarkerClick","marker","e","selectedPlace","activeMarker","showingInfoWindow","onClose","userLocation","lat","lng","inherits","createClass","key","navigator","geolocation","getCurrentPosition","position","_position$coords","coords","latitude","longitude","dist","google","zoom","initialCenter","name","visible","GoogleApiWrapper","apiKey","Home","handleSearch","newSearch","searchTerm","lcSearch","toLowerCase","newFiltRecipes","recipes","recipe","recipeTitleByIndex","includes","filtRecipes","isLoggedIn","userData","logout","inputRecipe","recipeDescription","myRecipes","showMyRecipes","toggleMyRecipesText","showMap","bind","assertThisInitialized","showInput","loadRecipes","plusRating","toggleMyRecipes","toggleMap","userName","str","txt","charAt","substr","components_PostRecipe","doRefresh","string","index","_this3","self","recipeTitle","newRecipe","result","newRecipeArray","toConsumableArray","fontWeight","rating","Col","xs","sm","textAlign","capitalize_Words","fontStyle","jsUcfirst","showDesc","maxHeight","_this4","_this5","allRecipes","sort","b","_loop","i","recipeItem","dontChange","goodJson","border","fontSize","minusRating","push","Promise","all","arrayOfElements","newComponent","components_RecipeDescription","_this6","displayedRecipes","Row","margin","Map","Form","Group","Control","placeholder","App","document","getItem","newToken","console","log","react_router_dom","backgroundColor","window","location","href","color","fontFamily","exact","path","render","routeProps","components_LoginForm","assign","components_Home","Boolean","hostname","match","ReactDOM","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83c938a0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      username: \"\",\r\n      isLoading: true,\r\n      signUpError: \"\",\r\n      registerForm: false,\r\n      token: this.props.token,\r\n      validSession: false,\r\n      toHome: false\r\n    };\r\n  }\r\n\r\n  //make sure user has provided both inputs\r\n  validateForm() {\r\n    return this.state.email.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n  //methods handle whether or not to render the registration form\r\n  register = event => {\r\n    this.setState({ registerForm: true })\r\n  }\r\n  backToLogin = event => {\r\n    this.setState({ registerForm: false })\r\n  }\r\n  //attempt to login\r\n  handleLogin = event => {\r\n    this.setState({ isLoading: true })\r\n    event.preventDefault();\r\n    const {\r\n      email,\r\n      password,\r\n    } = this.state;\r\n    fetch('/api/account/signin', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n      }),\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        //if server cannot authenticate, alert user\r\n        if (!json.success) {\r\n          this.setState({\r\n            signUpError: json.message\r\n          })\r\n          alert(\"invalid login\")\r\n          this.setState({ isLoading: false })\r\n        ///otherwise, save token to state and localstorage and attempt to send user to home\r\n        } else {\r\n          this.props.saveToken(json.token)\r\n          localStorage.setItem('tokenItem', json.token);\r\n          this.setState({ toHome: true, isLoading: false })\r\n        }\r\n\r\n      });\r\n  }\r\n  //attempt to register new user\r\n  handleSubmit = event => {\r\n    this.setState({ isLoading: true })\r\n    event.preventDefault();\r\n    const {\r\n      email,\r\n      password,\r\n      username\r\n    } = this.state;\r\n    fetch('/api/users', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: email,\r\n        password: password,\r\n        username: username\r\n      }),\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        //if registration is successful, alert user to success and return to login\r\n        if (json.success) {\r\n          this.setState({\r\n            signUpError: json.message,\r\n            isLoading: false,\r\n            email: '',\r\n            password: '',\r\n            username: ''\r\n          });\r\n          this.setState({ registerForm: false })\r\n        } else {\r\n        //if registration is unsuccessful (doe to username or email being taken already), alert use to try again\r\n          this.setState({\r\n            signUpError: json.message,\r\n            isLoading: false,\r\n          });\r\n          alert(\"Username or email taken! Try again.\")\r\n        }\r\n      });\r\n\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true })\r\n    //on mounting, attempt to validate any current token in state\r\n    fetch('/api/account/verify', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'token': this.state.token\r\n      }\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          this.setState({\r\n            validSession: true\r\n          });\r\n        } else {\r\n          this.setState({\r\n            validSession: false\r\n          });\r\n        }\r\n        this.setState({ isLoading: false })\r\n      });\r\n    \r\n  }\r\n  render() {\r\n    //if successful login is indicated, return to entrypage with new token\r\n    if (this.state.toHome) {\r\n      return <Redirect to='/home' />\r\n    }\r\n    //display Loading ... if appropriate\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <Container> <div className=\"text-center\"><h2 className=\"text-center\">Loading ... </h2> </div></Container>\r\n      )\r\n    }\r\n    //if it exists in state, render a registration form instead of login\r\n    if (this.state.registerForm) {\r\n      return (\r\n        <Container>\r\n          <div className=\"Login\">\r\n            <form onSubmit={this.handleSubmit}>\r\n              <FormGroup controlId=\"email\" bsSize=\"large\">\r\n                <FormLabel>Email  </FormLabel>\r\n                <FormControl\r\n                  autoFocus\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup controlId=\"username\" bsSize=\"large\">\r\n                <FormLabel>Username  </FormLabel>\r\n                <FormControl\r\n                  value={this.state.username}\r\n                  onChange={this.handleChange}\r\n                  type=\"username\"\r\n                />\r\n              </FormGroup>\r\n              <FormGroup controlId=\"password\" bsSize=\"large\">\r\n                <FormLabel>Password  </FormLabel>\r\n                <FormControl\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                  type=\"password\"\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                block\r\n                bsSize=\"large\"\r\n                disabled={!this.validateForm()}\r\n                type=\"submit\"\r\n                variant=\"info\"\r\n              >\r\n                Register\r\n            </Button>\r\n              <br></br>\r\n              <Button\r\n                block\r\n                bsSize=\"small\"\r\n                type=\"submit\"\r\n                variant=\"info\"\r\n                onClick={this.backToLogin}\r\n              >\r\n                Go Back\r\n            </Button>\r\n\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      );\r\n    }\r\n    //if there is no token currently in state, or if there is a token that fails authentication, render the login form\r\n    if (!this.state.token || this.state.validSession === false) {\r\n      return (\r\n        <Container>\r\n          <div>\r\n            <p>Login here: </p>\r\n            <form onSubmit={this.handleLogin}>\r\n              <FormGroup controlId=\"email\" bsSize=\"large\">\r\n                <FormLabel>Email  </FormLabel>\r\n                <FormControl\r\n                  autoFocus\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup controlId=\"password\" bsSize=\"large\">\r\n                <FormLabel>Password  </FormLabel>\r\n                <FormControl\r\n                  value={this.state.password}\r\n                  onChange={this.handleChange}\r\n                  type=\"password\"\r\n                />\r\n              </FormGroup>\r\n              <Button\r\n                block\r\n                bsSize=\"large\"\r\n                disabled={!this.validateForm()}\r\n                type=\"submit\"\r\n                variant=\"info\"\r\n              >\r\n                Login\r\n                </Button>\r\n\r\n            </form>\r\n            <br></br>\r\n\r\n\r\n            <Button\r\n              block\r\n              bsSize=\"large\"\r\n              type=\"button\"\r\n              variant=\"info\"\r\n              onClick={this.register}>\r\n              Register\r\n          </Button>\r\n          </div>\r\n        </Container>\r\n      )\r\n    }\r\n    //by default, send user to home (assumes authentication has not failed)\r\n    return (\r\n      <div>\r\n        <p>Signed in</p>\r\n        <div><Redirect to=\"/home\" /></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LoginForm","import React from 'react';\r\nimport { Button, Container } from \"react-bootstrap\";\r\n\r\nclass RecipeDescription extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            ratingButtons: this.props.ratingButtons\r\n        }\r\n    }\r\n    render() {\r\n        return <Container><br></br><Button variant=\"info\" onClick={this.props.goBack}>Go Back</Button><h1>{this.props.title}</h1> <p>by {this.props.user}</p> <img className=\"img-fluid shadow-lg p-2 mb-3 rounded\" style={{\"max-height\": 550}} src={this.props.imgSrc}></img> {this.state.ratingButtons} {this.props.elements} <br></br> <p>{this.props.longDesc}</p><p>{this.props.instructions}</p><br></br></Container>\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default RecipeDescription","import React from 'react';\r\nimport { Button, FormGroup, FormControl, FormLabel } from \"react-bootstrap\";\r\n\r\nclass PostRecipe extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: \"\",\r\n            shortDesc: \"\",\r\n            longDesc: \"\",\r\n            ingredients: [],\r\n            instructions: \"\",\r\n            imageURL: \"\"\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        //this.props.user\r\n\r\n    }\r\n    //post input data as new recipe to server\r\n    handleSubmit = event => {\r\n        this.setState({isLoading: true})\r\n        event.preventDefault();\r\n        const {\r\n            title,\r\n            shortDesc,\r\n            longDesc,\r\n            ingredients,\r\n            instructions,\r\n            imageURL\r\n        } = this.state;\r\n        let ingredientsArray = ingredients.replace(/\\s*,\\s*/g, \",\").split(',')\r\n        ingredientsArray = ingredientsArray.map((item)=>{\r\n            let newItem= \"\"+item[0].toUpperCase()+item.slice(1)\r\n            return newItem\r\n        })\r\n        fetch('/api/recipes', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                token: this.props.token,\r\n                user: this.props.user,\r\n                title: title,\r\n                description: shortDesc,\r\n                longDescription: longDesc,\r\n                ingredients: ingredientsArray,\r\n                instructions: instructions,\r\n                image: imageURL\r\n            }),\r\n        }).then(res => res.json())\r\n            .then(json => {\r\n            //upon successful posting, go back\r\n            if (json.success) {\r\n                alert(\"Recipi saved!\")\r\n                this.props.goBack(true)\r\n            } else {\r\n                //else, alert user of error and remain on page\r\n                alert(\"Failed! Server error.\")\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n        [event.target.id]: event.target.value\r\n        });\r\n    }\r\n    render() {\r\n        //render an input form for a new recipe\r\n        return (<div className=\"col\">\r\n        <h2 className=\"text-center\">Here's your form, {this.props.user}</h2>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <FormGroup controlId=\"title\" bsSize=\"large\">\r\n                    <FormLabel>Recipi Title  </FormLabel>\r\n                    <FormControl\r\n                    autoFocus\r\n                    type=\"title\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"shortDesc\" bsSize=\"large\">\r\n                    <FormLabel>A short summay  </FormLabel>\r\n                    <FormControl\r\n                    value={this.state.shortDesc}\r\n                    onChange={this.handleChange}\r\n                    type=\"shortDesc\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"longDesc\" bsSize=\"large\">\r\n                    <FormLabel>A longer description  </FormLabel>\r\n                    <FormControl\r\n                    value={this.state.longDesc}\r\n                    onChange={this.handleChange}\r\n                    type=\"longDesc\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"instructions\" bsSize=\"large\">\r\n                    <FormLabel>Recipi instructions  </FormLabel>\r\n                    <FormControl\r\n                    value={this.state.instructions}\r\n                    onChange={this.handleChange}\r\n                    type=\"instructions\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"ingredients\" bsSize=\"large\">\r\n                    <FormLabel>Ingredients  </FormLabel>\r\n                    <FormControl\r\n                    value={this.state.ingredients}\r\n                    onChange={this.handleChange}\r\n                    type=\"ingredients\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"imageURL\" bsSize=\"large\">\r\n                    <FormLabel>Image URL  </FormLabel>\r\n                    <FormControl\r\n                    value={this.state.imageURL}\r\n                    onChange={this.handleChange}\r\n                    type=\"imageURL\"\r\n                    />\r\n                </FormGroup>\r\n                <Button\r\n                    block\r\n                    bsSize=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"info\"\r\n                >\r\n                    Submit your Recipi!\r\n                </Button>\r\n                <br></br>\r\n                <Button variant=\"info\" onClick={()=>{this.props.goBack(false)}}>Go back</Button>\r\n            </form>\r\n        </div>)\r\n    }\r\n    }\r\n\r\n    export default PostRecipe","import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '100%'\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            token: \"\",\r\n            isLoading: true,\r\n            showingInfoWindow: false,\r\n            activeMarker: {},\r\n            selectedPlace: {},\r\n            userLocation: { lat: 30.26, lng: -97.74}\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        navigator.geolocation.getCurrentPosition(\r\n            position => {\r\n              const { latitude, longitude } = position.coords;\r\n      \r\n              this.setState({\r\n                userLocation: { lat: latitude, lng: longitude },\r\n                isLoading: false\r\n              });\r\n\r\n            },\r\n            () => {\r\n                //permission denied\r\n              this.setState({ isLoading: false });\r\n            }\r\n          );\r\n    }\r\n    onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n    onClose = props => {\r\n        if (this.state.showingInfoWindow) {\r\n          this.setState({\r\n            showingInfoWindow: false,\r\n            activeMarker: null\r\n          });\r\n        }\r\n      };\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return <div>Loading ... </div>\r\n        }\r\n        return (\r\n            <Map\r\n              google={this.props.google}\r\n              zoom={14}\r\n              style={mapStyles}\r\n              initialCenter={this.state.userLocation}\r\n            >\r\n              <Marker\r\n                position={{ lat: 30.254659, lng: -97.762101}}\r\n                onClick={this.onMarkerClick}\r\n                name={\"Odd Duck\"}\r\n              />\r\n              <Marker\r\n                position={{ lat: 30.249659, lng: -97.749984}}\r\n                onClick={this.onMarkerClick}\r\n                name={\"Hopdoddy\"}\r\n              />\r\n              <Marker\r\n                position={{ lat: 30.245221, lng: -97.779389}}\r\n                onClick={this.onMarkerClick}\r\n                name={\"Matt's El Rancho\"}\r\n              />\r\n              <Marker\r\n                position={{ lat: 30.249199, lng: -97.749589}}\r\n                onClick={this.onMarkerClick}\r\n                name={\"Home Slice\"}\r\n              />\r\n              <Marker\r\n                position={{ lat: 30.266742, lng: -97.744948}}\r\n                onClick={this.onMarkerClick}\r\n                name={\"Truluck's\"}\r\n              />\r\n              <InfoWindow\r\n                marker={this.state.activeMarker}\r\n                visible={this.state.showingInfoWindow}\r\n                onClose={this.onClose}\r\n              >\r\n                <div>\r\n                  <h4>{this.state.selectedPlace.name}</h4>\r\n                </div>\r\n              </InfoWindow>\r\n            </Map>\r\n          );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyClOhMinsJlKmviBdX43_mVHtn4Uk7qb6k'\r\n})(MapContainer);","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport { Container, Row, Col, Form } from 'react-bootstrap';\r\nimport { Button } from \"react-bootstrap\";\r\nimport RecipeDescription from \"./RecipeDescription\"\r\nimport PostRecipe from './PostRecipe'\r\nimport Map from \"./Map\"\r\n\r\n\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      token: this.props.token,\r\n      isLoggedIn: false,\r\n      userData: \"\",\r\n      recipes: [],\r\n      logout: false,\r\n      isLoading: true,\r\n      inputRecipe: \"\",\r\n      recipeDescription: \"\",\r\n      searchTerm: \"\",\r\n      recipeTitleByIndex: [],\r\n      filtRecipes: [],\r\n      myRecipes: [<h3>Nothing to show!</h3>],\r\n      showMyRecipes: false,\r\n      toggleMyRecipesText: \"Show My Recipis\",\r\n      showMap: false\r\n    }\r\n    this.goBack = this.goBack.bind(this);\r\n    this.showInput = this.showInput.bind(this);\r\n    this.loadRecipes = this.loadRecipes.bind(this);\r\n    this.plusRating = this.plusRating.bind(this);\r\n    this.toggleMyRecipes = this.toggleMyRecipes.bind(this);\r\n    this.toggleMap = this.toggleMap.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    //verify token\r\n    this.setState({ isLoading: true })\r\n    fetch('/api/account/verify', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'token': this.state.token\r\n      }\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          this.setState({\r\n            isLoggedIn: true,\r\n            userData: json.userData.userName,\r\n            isLoading: false\r\n          });\r\n          this.loadRecipes()\r\n        } else {\r\n          this.setState({\r\n            isLoggedIn: false,\r\n            isLoading: false\r\n          });\r\n        }\r\n      });\r\n\r\n  }\r\n  // handle a new search term being entered to filter which recipes are displayed\r\n  handleSearch = (event) => {\r\n    let newSearch = \"\"\r\n    if (event) {\r\n      newSearch = event.target.value\r\n      this.setState({\r\n        searchTerm: newSearch\r\n      });\r\n    } else {\r\n      //if this method is being called from a context without any event, continue using existing search term\r\n      newSearch = this.state.searchTerm\r\n    }\r\n\r\n    //convert search term to lowercase\r\n    let lcSearch = newSearch.toLowerCase()\r\n    let allRecipes = this.state.recipes\r\n    //map over all recipes\r\n    let newFiltRecipes = allRecipes.map((recipe) => {\r\n      let compareTitle = this.state.recipeTitleByIndex[recipe.key]\r\n      //if title of recipe includes the search term, return it to the new filtered array\r\n      if (compareTitle.includes(lcSearch)) {\r\n        return recipe\r\n      } else {\r\n        return <div></div>\r\n      }\r\n    })\r\n    this.setState({ filtRecipes: newFiltRecipes })\r\n  }\r\n  //method capitalizes first letter of all words, used for titles etc.\r\n  capitalize_Words(str) {\r\n    return str.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\r\n  }\r\n  //method renders an input form for new recipes\r\n  showInput() {\r\n    this.setState({ inputRecipe: <Container><div className=\"row align-items-center justify-content-center\"><PostRecipe user={this.state.userData} token={this.state.token} goBack={this.goBack} /></div></Container> })\r\n  }\r\n  //props function in recipe input form, used to return to main page\r\n  goBack(doRefresh) {\r\n    if (doRefresh) {\r\n      this.loadRecipes()\r\n    }\r\n    this.setState({ inputRecipe: \"\" })\r\n  }\r\n  //method capitalizes only the first letter in a string, used for descriptions etc.\r\n  jsUcfirst(string) {\r\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\r\n  }\r\n  //method increments a recipe's rating by +1 if user has not already voted\r\n  plusRating(title, index) {\r\n    let self = this\r\n    fetch('/api/user/didvote', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        user: this.state.userData,\r\n        recipeTitle: title,\r\n        token: this.state.token\r\n      }),\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          fetch('/api/recipes/plusrating', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              title: title,\r\n              token: this.state.token\r\n            }),\r\n          }).then((res) => { return res.json() }).then((json) => {\r\n            if (json.success) {\r\n              //this.loadRecipes()\r\n              let newRecipe = {}\r\n              fetch('/api/recipes/find', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                  title: title,\r\n                  token: this.state.token\r\n                }),\r\n              }).then((res) => {\r\n                return res.json()\r\n              }).then((result) => {\r\n                newRecipe = result[0]\r\n                let newRecipeArray = [...self.state.recipes]\r\n                let ratingButtons = <div><p>Already voted!</p> <p style={{ fontWeight: \"bold\"}}>Rating: {newRecipe.rating} </p></div>\r\n                newRecipeArray[index] = <Col key={index} xs=\"6\" sm=\"4\"><div style={{ textAlign: \"left\" }}>    <p><span style={{ fontWeight: \"bold\" }}>{self.capitalize_Words(newRecipe.title)}</span> <br></br><span style={{ fontStyle: \"italic\" }}>By {newRecipe.user} </span><br></br> {self.jsUcfirst(newRecipe.description)}</p><img onClick={() => { self.showDesc(newRecipe, ratingButtons) }} src={newRecipe.image} id=\"imgClick\" style={{ height: \"auto\", maxHeight: \"275px\"}}className=\"img-fluid shadow p-1 mb-3 rounded\" ></img>{ratingButtons}<br></br></div></Col>\r\n                self.setState({ recipes: newRecipeArray })\r\n\r\n                //if page is currently displayed a recipe description, refresh the component to display new rating properly\r\n                if (self.state.recipeDescription) {\r\n                  self.setState({ recipeDescription: \"\" })\r\n                  self.showDesc(newRecipe, ratingButtons)\r\n                }\r\n                //if there is currently a search term filtering results, refresh the filtering to display new rating properly\r\n                if (self.state.searchTerm) {\r\n                  self.handleSearch()\r\n                }\r\n                //if user is currently viewing their own recipes, refresh the list to update rankings properly\r\n                if (self.state.showMyRecipes) {\r\n                  self.loadRecipes()\r\n                }\r\n\r\n              })\r\n            }\r\n          }\r\n          )\r\n        } else {\r\n          alert(\"already voted!\")\r\n        }\r\n      });\r\n  }\r\n  //method increments a recipe's rating by -1 if user has not already voted\r\n  minusRating(title, index) {\r\n    let self = this\r\n    fetch('/api/user/didvote', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        user: this.state.userData,\r\n        recipeTitle: title,\r\n        token: this.state.token\r\n      }),\r\n    }).then(res => res.json())\r\n      .then(json => {\r\n        if (json.success) {\r\n          fetch('/api/recipes/minusrating', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              title: title,\r\n              token: this.state.token\r\n            })\r\n          }).then((res) => { return res.json() }).then((json) => {\r\n            if (json.success) {\r\n              let newRecipe = {}\r\n              fetch('/api/recipes/find', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                  title: title,\r\n                  token: this.state.token\r\n                }),\r\n              }).then((res) => {\r\n                return res.json()\r\n              }).then((result) => {\r\n                newRecipe = result[0]\r\n                let newRecipeArray = [...self.state.recipes]\r\n                let ratingButtons = <div><p>Already voted!</p> <p style={{ fontWeight: \"bold\"}}>Rating: {newRecipe.rating} </p></div>\r\n                newRecipeArray[index] = <Col key={index} xs=\"6\" sm=\"4\"><div style={{ textAlign: \"left\" }}>    <p><span style={{ fontWeight: \"bold\" }}>{self.capitalize_Words(newRecipe.title)}</span> <br></br><span style={{ fontStyle: \"italic\" }}>By {newRecipe.user} </span><br></br> {self.jsUcfirst(newRecipe.description)}</p><img onClick={() => { self.showDesc(newRecipe, ratingButtons) }} src={newRecipe.image} id=\"imgClick\" style={{ height: \"auto\", maxHeight: \"275px\"}} className=\"img-fluid shadow p-1 mb-3 rounded\" ></img>{ratingButtons}<br></br></div></Col>\r\n                self.setState({ recipes: newRecipeArray })\r\n\r\n                //if page is currently displayed a recipe description, refresh the component to display new rating properly\r\n                if (self.state.recipeDescription) {\r\n                  self.setState({ recipeDescription: \"\" })\r\n                  self.showDesc(newRecipe, ratingButtons)\r\n                }\r\n                //if there is currently a search term filtering results, refresh the filtering to display new rating properly\r\n                if (self.state.searchTerm) {\r\n                  self.handleSearch()\r\n                }\r\n                //if user is currently viewing their own recipes, refresh the list to update rankings properly\r\n                if (self.state.showMyRecipes) {\r\n                  self.loadRecipes()\r\n                }\r\n\r\n              })\r\n            }\r\n          }\r\n          )\r\n        } else {\r\n          alert(\"already voted!\")\r\n        }\r\n      });\r\n\r\n  }\r\n  //method fetches all recipes from database, sorts by rating in descending order, and format them for display\r\n  loadRecipes() {\r\n\r\n    let self = this\r\n    this.setState({ isLoading: true })\r\n    return fetch('/api/recipes', {\r\n      method: 'GET',\r\n      headers: {\r\n        'token': this.state.token\r\n      },\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        let allRecipes = []\r\n        let myRecipes = []\r\n        //sort by rating in descending order\r\n        json.sort(function (a, b) {\r\n          return b.rating - a.rating\r\n        })\r\n        //check if current user voted already on each recipe\r\n        for (let i = 0; i < json.length; i++) {\r\n          let recipeItem = fetch('/api/user/didvote', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              user: self.state.userData,\r\n              recipeTitle: json[i].title,\r\n              dontChange: true,\r\n              token: this.state.token\r\n            }),\r\n          }).then(res => res.json())\r\n            .then(goodJson => {\r\n              let ratingButtons = \"\"\r\n              if (goodJson.success) {\r\n                ratingButtons = <div><Button style={{ border: \"1px solid black\", width: \"45px\", height: \"45px\", fontWeight: \"bold\", fontSize: \"20px\" }} variant=\"info\" onClick={() => { this.plusRating(json[i].title, i) }}> + </Button><Button style={{ border: \"1px solid black\", width: \"45px\", height: \"45px\", fontWeight: \"bold\", fontSize: \"20px\" }} variant=\"info\" onClick={() => { this.minusRating(json[i].title, i) }}> - </Button> <p style={{ fontWeight: \"bold\"}}>Rating: {json[i].rating} </p></div>\r\n              } else {\r\n                ratingButtons = <div><p>Already voted!</p> <p style={{ fontWeight: \"bold\"}}>Rating: {json[i].rating} </p></div>\r\n              }\r\n              let recipeTitleByIndex = self.state.recipeTitleByIndex\r\n              recipeTitleByIndex[i] = json[i].title\r\n              self.setState({ recipeTitleByIndex: recipeTitleByIndex })\r\n\r\n              // if current user is the author of a recipe, add it to their own array\r\n              if (self.state.userData === json[i].user) {\r\n                myRecipes.push(<Col key={i} xs=\"6\" sm=\"4\"><div style={{ textAlign: \"left\" }}>    <p><span style={{ fontWeight: \"bold\" }}>{this.capitalize_Words(json[i].title)}</span> <br></br><span style={{ fontStyle: \"italic\" }}>By {json[i].user} </span><br></br> {this.jsUcfirst(json[i].description)}</p><img onClick={() => { this.showDesc(json[i], ratingButtons) }} src={json[i].image} id=\"imgClick\" style={{ height: \"auto\", maxHeight: \"275px\"}} className=\"img-fluid shadow p-1 mb-3 rounded\" ></img>{ratingButtons}<br></br></div></Col>)\r\n              }\r\n\r\n              return <Col key={i} xs=\"6\" sm=\"4\"><div style={{textAlign: \"left\"}}>    <p><span style={{ fontWeight: \"bold\" }}>{this.capitalize_Words(json[i].title)}</span> <br></br><span style={{ fontStyle: \"italic\" }}>By {json[i].user} </span><br></br> {this.jsUcfirst(json[i].description)}</p><img onClick={() => { this.showDesc(json[i], ratingButtons) }} src={json[i].image} id=\"imgClick\" style={{ height: \"auto\", maxHeight: \"275px\"}} className=\"img-fluid shadow p-1 mb-3 rounded\" ></img>{ratingButtons}<br></br></div></Col>\r\n            })\r\n          allRecipes.push(recipeItem)\r\n        }\r\n        Promise.all(allRecipes).then((allRecipes) => {\r\n          if (!myRecipes[0]) {\r\n            myRecipes.push(<h3>Nothing to show!</h3>)\r\n          }\r\n          this.setState({ recipes: allRecipes, myRecipes: myRecipes, isLoading: false })\r\n        })\r\n      })\r\n\r\n\r\n  }\r\n  //method shows a detailed description of recipe upon clicking\r\n  showDesc(recipe, ratingButtons) {\r\n    let self = this\r\n    let arrayOfElements = []\r\n    for (let i = 0; i < recipe.ingredients.length; i++) {\r\n      arrayOfElements.push(<div>{`\\u2022`} {recipe.ingredients[i]}<br></br></div>)\r\n    }\r\n    let newComponent = <RecipeDescription ratingButtons={ratingButtons} title={this.capitalize_Words(recipe.title)} user={recipe.user} imgSrc={recipe.image} elements={arrayOfElements} longDesc={recipe.longDescription} instructions={recipe.instructions} goBack={() => { self.setState({ recipeDescription: \"\" }) }} />\r\n    this.setState({ recipeDescription: newComponent })\r\n  }\r\n  toggleMyRecipes() {\r\n    if (this.state.showMyRecipes) {\r\n      this.setState({ showMyRecipes: false, toggleMyRecipesText: \"Show My Recipis\" })\r\n    } else {\r\n      this.setState({ showMyRecipes: true, toggleMyRecipesText: \"Show All Recipis\" })\r\n    }\r\n  }\r\n  toggleMap() {\r\n    if (this.state.showMap) {\r\n      this.setState({ showMap: false })\r\n    } else {\r\n      this.setState({ showMap: true })\r\n    }\r\n  }\r\n  //logs user out of current session\r\n  logout(token) {\r\n    this.setState({ isLoading: true })\r\n    //NOW STATELESS - simply clear token from client-side\r\n    this.props.saveToken(\"\")\r\n    this.setState({ logout: true, isLoggedIn: false, isLoading: false })\r\n\r\n  }\r\n  render() {\r\n    //if content is loading, display Loading ... screen\r\n    if (this.state.isLoading) {\r\n      return <Container> <div className=\"text-center\"><h2 className=\"text-center\">Loading ... </h2> </div></Container>\r\n    }\r\n    //if a description exists in state, display that component\r\n    if (this.state.recipeDescription) {\r\n      return this.state.recipeDescription\r\n    }\r\n    //after logging out of session, return to entry page\r\n    if (this.state.logout) {\r\n      return <Redirect to='/' />\r\n    }\r\n    //if input form exists in state, display that component\r\n    if (this.state.inputRecipe) {\r\n      return this.state.inputRecipe\r\n    }\r\n    //check for token\r\n    if (this.state.token) {\r\n      //if token is valid and user successfully authenticates, display main recipes page\r\n      if (this.state.isLoggedIn) {\r\n        let displayedRecipes = \"\"\r\n        //if there is currently a non-empty search term string, only display filtered recipes\r\n        if (this.state.searchTerm !== \"\") {\r\n          displayedRecipes = <Row>{this.state.filtRecipes}</Row>\r\n        } else {\r\n          displayedRecipes = <Row>{this.state.recipes}</Row>\r\n        }\r\n        if (this.state.showMyRecipes) {\r\n          displayedRecipes = <Row>{this.state.myRecipes}</Row>\r\n        }\r\n        if (this.state.showMap) {\r\n          return <div className=\"text-center\" style={{height: \"1000px\", margin: \"0px\"}}><Button className=\"btn\" style={{margin: \"5px\"}} variant=\"info\" onClick={this.toggleMap}>Toggle Map</Button><br></br><Map /></div>\r\n        }\r\n        return (\r\n        <div>\r\n        <Container>\r\n          <h3 className=\"text-center\"> Welcome {this.state.userData}, check out these Recipis!</h3>\r\n          <Form onSubmit={(e)=>{e.preventDefault()}}>\r\n            <Form.Group controlId=\"formSearchTerms\">\r\n              <Form.Control\r\n                value={this.state.searchTerm}\r\n                onChange={this.handleSearch}\r\n                type=\"search\"\r\n                placeholder=\"Search Recipi titles ...\" />\r\n            </Form.Group>\r\n          </Form>\r\n          <br></br>\r\n\r\n          <div className=\"text-center\">\r\n            <Button className=\"btn\" variant=\"info\" onClick={this.showInput}>Post a Recipi</Button>    <span> </span>\r\n            <Button className=\"btn\" variant=\"info\" onClick={this.toggleMyRecipes}>{this.state.toggleMyRecipesText}</Button>    <span> </span>\r\n            <Button className=\"btn\" variant=\"info\" onClick={this.toggleMap}>Toggle Map</Button>\r\n          </div>\r\n          <br></br>\r\n          \r\n            {displayedRecipes}\r\n            <br></br>\r\n        \r\n          <div className=\"text-center\">\r\n            <Button className=\"btn\" variant=\"secondary\" onClick={() => { this.logout(this.state.token) }}>Logout</Button>\r\n          </div>\r\n        </Container>\r\n        </div>)\r\n      } else {\r\n        return (<Container><div className=\"text-center\"><p>Loading ... </p></div></Container>)\r\n      }\r\n    }\r\n    //if no token exists to authenticate, return to entrypage \r\n    else if (!this.state.token) {\r\n      return (<div><Redirect to=\"/\" /></div>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home","import React, { Component } from \"react\";\nimport './App.css';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport LoginForm from './components/LoginForm'\nimport Home from './components/Home'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      token: \"\"\n    };\n    this.saveToken = this.saveToken.bind(this);\n  }\n  componentDidMount() {\n    document.title = \"Recipi\"\n\n    //check if there exists a token in localStorage already, and if so, try to verify it\n    if (this.state.token === \"\" && localStorage.getItem('tokenItem')) {\n      //start by saving localStorage token to state\n      var newToken = localStorage.getItem('tokenItem');\n      this.setState({ token: newToken })\n    } else if (this.state.token) {\n      fetch('/api/account/verify', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'token': this.state.token\n        }\n      }).then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            //if token is valid, continue using it\n            console.log(\"token is valid\")\n          } else {\n            //otherwise, clear local storage and state \n            this.saveToken(\"\")\n          }\n        });\n    }\n  }\n  saveToken(token) {\n    console.log(\"saveToken is called with token: \"+token)\n    localStorage.setItem('tokenItem', token)\n    this.setState({ token: token })\n  }\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <header id=\"headerClick\" style={{ backgroundColor: \"#6dc4ed\" }}>\n            <h1 onClick={()=>{\n                window.location.href = '/'\n              }} className=\"Recipi\"> Recipi </h1>\n          </header>\n          <body style={{ backgroundColor: \"#e6f5fc\", color: \"#1c7fad\", fontFamily: \"Quicksand\" }}>\n            <Route exact path=\"/\" render={() => (\n              <Redirect to=\"/login\"/>\n            )} />\n            <Route exact path=\"/login\" render={(routeProps) => (\n              <LoginForm {...routeProps} token={this.state.token} saveToken={this.saveToken} />\n            )} />\n            <Route exact path=\"/home\" render={(routeProps) => (\n              <Home {...routeProps} token={this.state.token} saveToken={this.saveToken} />\n            )} />\n            <br></br>\n          </body>\n          <footer style={{ backgroundColor: \"#6dc4ed\" }}>Website built by Nicolai Antonov, 2019</footer>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}